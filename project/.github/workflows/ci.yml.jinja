name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:
  {% if test_pre_release -%}
  schedule:
    # run every week (for --pre release tests)
    - cron: "0 0 * * 0"
  {%- endif %}

{% raw -%}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
{%- endraw %}

jobs:
{%- if mode != 'simple' %}
  check-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run check-manifest
{% endif %}{% raw %}
  test:
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@v2
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      coverage-upload: artifact
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        platform: [ubuntu-latest, macos-latest, windows-latest]

  upload_coverage:
    if: always()
    needs: [test]
    uses: pyapp-kit/workflows/.github/workflows/upload-coverage.yml@v2
    secrets:
      codecov_token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    name: Deploy
    needs: test
    if: success() && startsWith(github.ref, 'refs/tags/'){% endraw %}{%- if test_pre_release %}{% raw %} && github.event_name != 'schedule'{% endraw %}{% endif %}{% raw %}
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: üë∑ Build
        run: |
          python -m pip install build
          python -m build

      - name: üö¢ Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: './dist/*'
{% endraw %}